{
  "version": "experimental",
  "tags": [
    {
      "name": "xtal-fetch",
      "attributes": [
        {
          "name": "for-each",
          "description": "Comma delimited list of properties to use as input for the fetch urls",
          "type": "String"
        },
        {
          "name": "as",
          "description": "How to treat the response",
          "type": "\"json\"|\"text\""
        },
        {
          "name": "href",
          "description": "URL (path) to fetch.",
          "type": "string",
          "default": "\"https://unpkg.com/xtal-fetch@0.0.75/demo/generated.json\""
        },
        {
          "name": "disabled",
          "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
          "type": "boolean"
        },
        {
          "name": "req-init",
          "description": "Object to use for second parameter of fetch method.  Can parse the value from the attribute if the attribute is in JSON format.\r\nSupports JSON formatted attribute",
          "type": "object"
        },
        {
          "name": "cache-results",
          "description": "Indicates whether to pull the response from a previous identical fetch request from cache.",
          "type": "boolean"
        },
        {
          "name": "debounce-duration",
          "description": "How long to pause between requests",
          "type": "Number"
        },
        {
          "name": "insert-results",
          "description": "Indicate whether to set the innerHTML of the web component with the response from the server.  \r\nMake sure the service is protected against XSS.",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "resultChangedContract",
          "type": "object",
          "default": "{\"trigger\":\"\\n    import 'https://unpkg.com/xtal-fetch/xtal-fetch-entities.js?module';\\n    \",\"expectedEvent\":{\"name\":\"result-changed\",\"detail\":{\"value\":[{\"_id\":\"580d3fbba86e6de6accf5cd1\",\"index\":0,\"guid\":\"23bc285a-1c9e-4975-9c85-f3203721444e\",\"isActive\":false,\"balance\":\"$3,317.88\",\"picture\":\"http://placehold.it/32x32\",\"age\":37,\"eyeColor\":\"brown\",\"name\":\"Cooper Patel\",\"gender\":\"male\",\"company\":\"UNISURE\",\"email\":\"cooperpatel@unisure.com\",\"phone\":\"+1 (821) 531-3163\",\"address\":\"962 Varick Avenue, Bentley, Delaware, 1319\",\"about\":\"Aliqua reprehenderit sit reprehenderit cillum anim duis reprehenderit ea deserunt veniam aliquip pariatur aute. Anim sint ea sunt ut sunt sint incididunt dolor. Ipsum ex dolor consequat aute. Eiusmod mollit qui nulla labore Lorem aute occaecat cillum irure fugiat. Nisi proident anim quis laboris veniam aute deserunt eu ipsum culpa eiusmod duis et pariatur.\\r\\n\",\"registered\":\"2015-06-20T05:36:12 +04:00\",\"latitude\":-53.862758,\"longitude\":-135.928028,\"tags\":[\"et\",\"deserunt\",\"proident\",\"proident\",\"qui\",\"magna\",\"voluptate\"],\"friends\":[{\"id\":0,\"name\":\"Stuart Massey\"},{\"id\":1,\"name\":\"Spencer Garrett\"},{\"id\":2,\"name\":\"Petty Houston\"}],\"greeting\":\"Hello, Cooper Patel! You have 1 unread messages.\",\"favoriteFruit\":\"strawberry\"},{\"_id\":\"580d3fbb28cb6eedfb381e86\",\"index\":1,\"guid\":\"ce10cf67-7499-466d-bffc-6e793e280f0a\",\"isActive\":false,\"balance\":\"$3,285.45\",\"picture\":\"http://placehold.it/32x32\",\"age\":40,\"eyeColor\":\"green\",\"name\":\"Randolph Cameron\",\"gender\":\"male\",\"company\":\"AQUACINE\",\"email\":\"randolphcameron@aquacine.com\",\"phone\":\"+1 (980) 496-3651\",\"address\":\"143 Jackson Court, Delshire, Vermont, 1273\",\"about\":\"Cillum do laboris laborum aliquip labore nisi. Do dolore irure voluptate reprehenderit consequat. Laborum cupidatat cillum dolore officia elit.\\r\\n\",\"registered\":\"2014-04-02T10:49:07 +04:00\",\"latitude\":42.521681,\"longitude\":-152.496821,\"tags\":[\"sint\",\"fugiat\",\"amet\",\"dolore\",\"non\",\"nostrud\",\"labore\"],\"friends\":[{\"id\":0,\"name\":\"Leigh Rojas\"},{\"id\":1,\"name\":\"Hale Scott\"},{\"id\":2,\"name\":\"Head Jones\"}],\"greeting\":\"Hello, Randolph Cameron! You have 7 unread messages.\",\"favoriteFruit\":\"banana\"},{\"_id\":\"580d3fbb3e4f98e9c1ed509b\",\"index\":2,\"guid\":\"c973f141-319c-441f-8cb7-b7a08114b3cc\",\"isActive\":true,\"balance\":\"$3,205.61\",\"picture\":\"http://placehold.it/32x32\",\"age\":40,\"eyeColor\":\"green\",\"name\":\"Vivian Jacobson\",\"gender\":\"female\",\"company\":\"PARLEYNET\",\"email\":\"vivianjacobson@parleynet.com\",\"phone\":\"+1 (903) 441-2185\",\"address\":\"556 Albemarle Terrace, Stagecoach, Idaho, 4267\",\"about\":\"Ex anim pariatur eu mollit voluptate. Ad qui magna amet ullamco officia fugiat dolore elit cupidatat. Aute cupidatat nostrud consectetur est aute incididunt duis aliquip. Ex laboris incididunt nulla est culpa reprehenderit dolor tempor.\\r\\n\",\"registered\":\"2015-02-22T10:51:13 +05:00\",\"latitude\":28.14754,\"longitude\":-84.275715,\"tags\":[\"nostrud\",\"in\",\"laborum\",\"ut\",\"reprehenderit\",\"deserunt\",\"pariatur\"],\"friends\":[{\"id\":0,\"name\":\"Whitney Herman\"},{\"id\":1,\"name\":\"Schultz Cooper\"},{\"id\":2,\"name\":\"Delaney Nicholson\"}],\"greeting\":\"Hello, Vivian Jacobson! You have 6 unread messages.\",\"favoriteFruit\":\"apple\"}]}}}"
        },
        {
          "name": "forEach",
          "attribute": "for-each",
          "description": "Comma delimited list of properties to use as input for the fetch urls",
          "type": "String"
        },
        {
          "name": "setPath",
          "description": "Path to set value inside each entity",
          "type": "String"
        },
        {
          "name": "inEntities",
          "description": "Array of entities to use as input for building the url (along with forEach value).  Also place where result should go (using setPath attribute)",
          "type": "Array"
        },
        {
          "name": "cachedResults",
          "type": "{ [key: string]: any; }"
        },
        {
          "name": "errorText",
          "description": "Indicates the error text of the last request.\r\n⚡ Fires event error-text-changed.",
          "type": "String"
        },
        {
          "name": "abort",
          "type": "boolean"
        },
        {
          "name": "as",
          "attribute": "as",
          "description": "How to treat the response",
          "type": "\"json\"|\"text\""
        },
        {
          "name": "value"
        },
        {
          "name": "evCount",
          "description": "Tracks how many times each event type was called.",
          "type": "{ [key: string]: number; }",
          "default": "{}"
        },
        {
          "name": "href",
          "attribute": "href",
          "description": "URL (path) to fetch.",
          "type": "string",
          "default": "\"https://unpkg.com/xtal-fetch@0.0.75/demo/generated.json\""
        },
        {
          "name": "fetch",
          "type": "boolean",
          "default": "true"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
          "type": "boolean"
        },
        {
          "name": "result",
          "description": "⚡ Fires event result-changed\r\nResult of fetch request",
          "type": "Object"
        },
        {
          "name": "reqInit",
          "attribute": "req-init",
          "description": "Object to use for second parameter of fetch method.  Can parse the value from the attribute if the attribute is in JSON format.\r\nSupports JSON formatted attribute",
          "type": "object"
        },
        {
          "name": "cacheResults",
          "attribute": "cache-results",
          "description": "Indicates whether to pull the response from a previous identical fetch request from cache.",
          "type": "boolean"
        },
        {
          "name": "reqInitRequired",
          "description": "Indicates that no fetch request should proceed until reqInit property / attribute is set.",
          "type": "boolean"
        },
        {
          "name": "debounceDuration",
          "attribute": "debounce-duration",
          "description": "How long to pause between requests",
          "type": "Number"
        },
        {
          "name": "errorResponse",
          "description": "Error response as an object\r\n⚡ Fires event error-response-changed",
          "type": "Object"
        },
        {
          "name": "fetchInProgress",
          "description": "Indicates Fetch is in progress\r\n⚡ Fires event fetch-in-progress-changed",
          "type": "Boolean"
        },
        {
          "name": "insertResults",
          "attribute": "insert-results",
          "description": "Indicate whether to set the innerHTML of the web component with the response from the server.  \r\nMake sure the service is protected against XSS.",
          "type": "boolean"
        },
        {
          "name": "baseLinkId",
          "type": "string"
        }
      ],
      "events": [
        {
          "name": "error-response-changed"
        },
        {
          "name": "error-text-changed"
        },
        {
          "name": "fetch-in-progress-changed"
        },
        {
          "name": "fetch-complete"
        },
        {
          "name": "result-changed"
        }
      ]
    }
  ]
}