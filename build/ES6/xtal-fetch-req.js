import{XtalFetchGet}from'./xtal-fetch-get.js';export function snakeToCamel(a){return a.replace(/(\-\w)/g,function(a){return a[1].toUpperCase()})}const debounceDuration='debounce-duration',reqInitRequired='req-init-required',cacheResults='cache-results',insertResults='insert-results',baseLinkId='base-link-id';export class XtalFetchReq extends XtalFetchGet{constructor(){super(),this._cacheResults=!1,this._cachedResults={},this._fetchInProgress=!1,this._reqInit=null}get reqInit(){return this._reqInit}set reqInit(a){this._reqInit=a,this.onPropsChange()}onPropsChange(){this.reqInitRequired&&!this.reqInit||(!this.__loadNewUrlDebouncer&&this.debounceDurationHandler(),this.__loadNewUrlDebouncer())}static get is(){return'xtal-fetch-req'}get cacheResults(){return this._cacheResults}set cacheResults(a){a?this.setAttribute(cacheResults,''):this.removeAttribute(cacheResults)}get cachedResults(){return this._cachedResults}get reqInitRequired(){return this.hasAttribute(reqInitRequired)}set reqInitRequired(a){a?this.setAttribute(reqInitRequired,''):this.removeAttribute(reqInitRequired)}get debounceDuration(){return this._debounceDuration}set debounceDuration(a){this.setAttribute(debounceDuration,a.toString())}get errorResponse(){return this._errorResponse}set errorResponse(a){this._errorResponse=a,this.de('error-response',{value:a})}get errorText(){return this._errorText}set errorText(a){this._errorText=a,this.de('error-text',{value:a})}get fetchInProgress(){return this._fetchInProgress}set fetchInProgress(a){this._fetchInProgress=a,this.de('fetch-in-progress',{value:a})}get insertResults(){return this._insertResults}set insertResults(a){a?this.setAttribute(insertResults,''):this.removeAttribute(insertResults)}get baseLinkId(){return this._baseLinkId}set baseLinkId(a){this.setAttribute(baseLinkId,a)}static get observedAttributes(){return super.observedAttributes.concat([debounceDuration,reqInitRequired,cacheResults,insertResults,baseLinkId])}attributeChangedCallback(a,b,c){a===debounceDuration?(this._debounceDuration=parseFloat(c),this.debounceDurationHandler()):a===reqInitRequired||a===cacheResults||a===insertResults?this['_'+snakeToCamel(a)]=null!==c:a===baseLinkId?this._baseLinkId=c:void 0;super.attributeChangedCallback(a,b,c)}debounce(a,b,c){let d;return function(){const e=this,f=arguments;clearTimeout(d),d=setTimeout(function(){d=null,c||a.apply(e,f)},b),c&&!d&&a.apply(e,f)}}debounceDurationHandler(){this.__loadNewUrlDebouncer=this.debounce(()=>{this.loadNewUrl()},this._debounceDuration)}do(){if(this.errorResponse=null,this._cacheResults){const a=this.cachedResults[this._href];if(a)return void(this.result=a)}this.fetchInProgress=!0;let a=this.href;if(this._baseLinkId){const b=self[this._baseLinkId];b&&(a=b.href+a)}self.fetch(this.href,this._reqInit).then((a)=>{this.fetchInProgress=!1,a[this._as]().then((b)=>{if(200!==a.status)this.errorResponse=a,a.text().then((a)=>{this.errorText=a});else{this.result=b,this.cachedResults&&(this.cachedResults[this._href]=b),'string'===typeof b&&this._insertResults&&(this.innerHTML=b);const a={href:this.href};this.dispatchEvent(new CustomEvent('fetch-complete',{detail:a,bubbles:!0,composed:!1}))}})})}connectedCallback(){super.connectedCallback(),this._upgradeProperties(['debounceDuration','reqInitRequired','cacheResults','reqInit'])}}customElements.get(XtalFetchReq.is)||customElements.define(XtalFetchReq.is,XtalFetchReq);