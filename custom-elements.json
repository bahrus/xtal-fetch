{
    "version": 2,
    "tags": [
        {
            "name": "xtal-fetch-entities",
            "description": "Entire feature set for xtal-fetch, including multiple entity requests.",
            "jsDoc": "/**\n *  Entire feature set for xtal-fetch, including multiple entity requests.\n *  @element xtal-fetch-entities\n */",
            "attributes": [
                {
                    "name": "disabled",
                    "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
                    "jsDoc": "/**\r\n         * Any component that emits events should not do so if it is disabled.\r\n         * Note that this is not enforced, but the disabled property is made available.\r\n         * Users of this mix-in should ensure not to call \"de\" if this property is set to true.\r\n         * @attr\r\n         */",
                    "type": "boolean"
                },
                {
                    "name": "as",
                    "description": "How to treat the response",
                    "jsDoc": "/**\r\n     * How to treat the response\r\n     * @attr\r\n     * @type {\"json\"|\"text\"}\r\n     */",
                    "type": "\"text\" | \"json\""
                },
                {
                    "name": "href",
                    "description": "URL (path) to fetch.",
                    "jsDoc": "/**\r\n     * URL (path) to fetch.\r\n     * @type {String}\r\n     * @attr\r\n     * \r\n     */",
                    "type": "string"
                },
                {
                    "name": "req-init",
                    "description": "Object to use for second parameter of fetch method.  Can parse the value from the attribute if the attribute is in JSON format.\r\nSupports JSON formatted attribute",
                    "jsDoc": "/**\r\n     * Object to use for second parameter of fetch method.  Can parse the value from the attribute if the attribute is in JSON format.\r\n     * Supports JSON formatted attribute\r\n     * @type {object}\r\n     * @attr req-init\r\n     */",
                    "type": "RequestInit | undefined"
                },
                {
                    "name": "cache-results",
                    "description": "Indicates whether to pull the response from a previous identical fetch request from cache.",
                    "jsDoc": "/**\r\n     * Indicates whether to pull the response from a previous identical fetch request from cache.\r\n     * @attr cache-results\r\n     */",
                    "type": "boolean"
                },
                {
                    "name": "debounce-duration",
                    "description": "How long to pause between requests",
                    "jsDoc": "/**\r\n     * How long to pause between requests\r\n     * @attr debounce-duration\r\n     * @type {Number}\r\n     * \r\n     */",
                    "type": "number"
                },
                {
                    "name": "insert-results",
                    "description": "Indicate whether to set the innerHTML of the web component with the response from the server.  \r\nMake sure the service is protected against XSS.",
                    "jsDoc": "/**\r\n     * Indicate whether to set the innerHTML of the web component with the response from the server.  \r\n     * Make sure the service is protected against XSS.\r\n     * @attr insert-results\r\n     */",
                    "type": "boolean"
                },
                {
                    "name": "for-each",
                    "description": "Comma delimited list of properties to use as input for the fetch urls",
                    "jsDoc": "/**\n     * Comma delimited list of properties to use as input for the fetch urls\n     * @type {String}\n     * @attr for-each\n     */",
                    "type": "any"
                }
            ],
            "properties": [
                {
                    "name": "val",
                    "type": "\"set\" | \"remove\""
                },
                {
                    "name": "disabled",
                    "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
                    "jsDoc": "/**\r\n         * Any component that emits events should not do so if it is disabled.\r\n         * Note that this is not enforced, but the disabled property is made available.\r\n         * Users of this mix-in should ensure not to call \"de\" if this property is set to true.\r\n         * @attr\r\n         */",
                    "type": "boolean"
                },
                {
                    "name": "evCount",
                    "description": "Tracks how many times each event type was called.",
                    "jsDoc": "/**\r\n         * Tracks how many times each event type was called.\r\n         */",
                    "type": "{ [key: string]: number; }"
                },
                {
                    "name": "asIs",
                    "type": "\"\" | \"-changed\""
                },
                {
                    "name": "fetch",
                    "type": "boolean"
                },
                {
                    "name": "as",
                    "description": "How to treat the response",
                    "jsDoc": "/**\r\n     * How to treat the response\r\n     * @attr\r\n     * @type {\"json\"|\"text\"}\r\n     */",
                    "type": "\"text\" | \"json\""
                },
                {
                    "name": "href",
                    "description": "URL (path) to fetch.",
                    "jsDoc": "/**\r\n     * URL (path) to fetch.\r\n     * @type {String}\r\n     * @attr\r\n     * \r\n     */",
                    "type": "string"
                },
                {
                    "name": "value",
                    "type": "any"
                },
                {
                    "name": "result",
                    "description": "⚡ Fires event result-changed\r\nResult of fetch request",
                    "jsDoc": "/**\r\n     * ⚡ Fires event result-changed\r\n     * Result of fetch request\r\n     * @type {Object}\r\n     * \r\n     * \r\n     */",
                    "type": "any"
                },
                {
                    "name": "baseLinkId",
                    "type": "string"
                },
                {
                    "name": "reqInit",
                    "description": "Object to use for second parameter of fetch method.  Can parse the value from the attribute if the attribute is in JSON format.\r\nSupports JSON formatted attribute",
                    "jsDoc": "/**\r\n     * Object to use for second parameter of fetch method.  Can parse the value from the attribute if the attribute is in JSON format.\r\n     * Supports JSON formatted attribute\r\n     * @type {object}\r\n     * @attr req-init\r\n     */",
                    "type": "RequestInit | undefined"
                },
                {
                    "name": "cacheResults",
                    "description": "Indicates whether to pull the response from a previous identical fetch request from cache.",
                    "jsDoc": "/**\r\n     * Indicates whether to pull the response from a previous identical fetch request from cache.\r\n     * @attr cache-results\r\n     */",
                    "type": "boolean"
                },
                {
                    "name": "reqInitRequired",
                    "description": "Indicates that no fetch request should proceed until reqInit property / attribute is set.",
                    "jsDoc": "/**\r\n     * Indicates that no fetch request should proceed until reqInit property / attribute is set.\r\n     */",
                    "type": "boolean"
                },
                {
                    "name": "debounceDuration",
                    "description": "How long to pause between requests",
                    "jsDoc": "/**\r\n     * How long to pause between requests\r\n     * @attr debounce-duration\r\n     * @type {Number}\r\n     * \r\n     */",
                    "type": "number"
                },
                {
                    "name": "errorResponse",
                    "description": "Error response as an object\r\n⚡ Fires event error-response-changed",
                    "jsDoc": "/**\r\n     * Error response as an object\r\n     * ⚡ Fires event error-response-changed\r\n     * @type {Object}\r\n     * \r\n     */",
                    "type": "Response | null"
                },
                {
                    "name": "errorText",
                    "description": "Indicates the error text of the last request.\r\n⚡ Fires event error-text-changed.",
                    "jsDoc": "/**\r\n     * Indicates the error text of the last request.\r\n     * ⚡ Fires event error-text-changed.\r\n     * @type {String}\r\n     */",
                    "type": "string"
                },
                {
                    "name": "fetchInProgress",
                    "description": "Indicates Fetch is in progress\r\n⚡ Fires event fetch-in-progress-changed",
                    "jsDoc": "/**\r\n     * Indicates Fetch is in progress\r\n     * ⚡ Fires event fetch-in-progress-changed\r\n     * @type {Boolean}\r\n     */",
                    "type": "boolean"
                },
                {
                    "name": "insertResults",
                    "description": "Indicate whether to set the innerHTML of the web component with the response from the server.  \r\nMake sure the service is protected against XSS.",
                    "jsDoc": "/**\r\n     * Indicate whether to set the innerHTML of the web component with the response from the server.  \r\n     * Make sure the service is protected against XSS.\r\n     * @attr insert-results\r\n     */",
                    "type": "boolean"
                },
                {
                    "name": "abort",
                    "type": "boolean"
                },
                {
                    "name": "forEach",
                    "description": "Comma delimited list of properties to use as input for the fetch urls",
                    "jsDoc": "/**\n     * Comma delimited list of properties to use as input for the fetch urls\n     * @type {String}\n     * @attr for-each\n     */",
                    "type": "any"
                },
                {
                    "name": "setPath",
                    "description": "Path to set value inside each entity",
                    "jsDoc": "/**\n     * Path to set value inside each entity\n     * @type {String}\n     * attr set-path\n     */",
                    "type": "any"
                },
                {
                    "name": "inEntities",
                    "description": "Array of entities to use as input for building the url (along with forEach value).  Also place where result should go (using setPath attribute)",
                    "jsDoc": "/**\n     * Array of entities to use as input for building the url (along with forEach value).  Also place where result should go (using setPath attribute)\n     * @type {Array}\n     *\n     */",
                    "type": "any"
                }
            ],
            "events": [
                {
                    "name": "fetch-complete"
                },
                {
                    "name": "fetch-in-progress-changed"
                },
                {
                    "name": "error-text-changed"
                },
                {
                    "name": "error-response-changed"
                },
                {
                    "name": "result-changed"
                }
            ],
            "slots": []
        },
        {
            "name": "xtal-fetch",
            "description": "Feature rich custom element that can make fetch calls, include Post requests.",
            "jsDoc": "/**\n * Feature rich custom element that can make fetch calls, include Post requests.\n *  @element xtal-fetch\n */",
            "attributes": [
                {
                    "name": "disabled",
                    "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
                    "jsDoc": "/**\r\n         * Any component that emits events should not do so if it is disabled.\r\n         * Note that this is not enforced, but the disabled property is made available.\r\n         * Users of this mix-in should ensure not to call \"de\" if this property is set to true.\r\n         * @attr\r\n         */",
                    "type": "boolean"
                },
                {
                    "name": "as",
                    "description": "How to treat the response",
                    "jsDoc": "/**\r\n     * How to treat the response\r\n     * @attr\r\n     * @type {\"json\"|\"text\"}\r\n     */",
                    "type": "\"text\" | \"json\""
                },
                {
                    "name": "href",
                    "description": "URL (path) to fetch.",
                    "jsDoc": "/**\r\n     * URL (path) to fetch.\r\n     * @type {String}\r\n     * @attr\r\n     * \r\n     */",
                    "type": "string"
                },
                {
                    "name": "req-init",
                    "description": "Object to use for second parameter of fetch method.  Can parse the value from the attribute if the attribute is in JSON format.\r\nSupports JSON formatted attribute",
                    "jsDoc": "/**\r\n     * Object to use for second parameter of fetch method.  Can parse the value from the attribute if the attribute is in JSON format.\r\n     * Supports JSON formatted attribute\r\n     * @type {object}\r\n     * @attr req-init\r\n     */",
                    "type": "RequestInit | undefined"
                },
                {
                    "name": "cache-results",
                    "description": "Indicates whether to pull the response from a previous identical fetch request from cache.",
                    "jsDoc": "/**\r\n     * Indicates whether to pull the response from a previous identical fetch request from cache.\r\n     * @attr cache-results\r\n     */",
                    "type": "boolean"
                },
                {
                    "name": "debounce-duration",
                    "description": "How long to pause between requests",
                    "jsDoc": "/**\r\n     * How long to pause between requests\r\n     * @attr debounce-duration\r\n     * @type {Number}\r\n     * \r\n     */",
                    "type": "number"
                },
                {
                    "name": "insert-results",
                    "description": "Indicate whether to set the innerHTML of the web component with the response from the server.  \r\nMake sure the service is protected against XSS.",
                    "jsDoc": "/**\r\n     * Indicate whether to set the innerHTML of the web component with the response from the server.  \r\n     * Make sure the service is protected against XSS.\r\n     * @attr insert-results\r\n     */",
                    "type": "boolean"
                },
                {
                    "name": "for-each",
                    "description": "Comma delimited list of properties to use as input for the fetch urls",
                    "jsDoc": "/**\n     * Comma delimited list of properties to use as input for the fetch urls\n     * @type {String}\n     * @attr for-each\n     */",
                    "type": "any"
                }
            ],
            "properties": [
                {
                    "name": "val",
                    "type": "\"set\" | \"remove\""
                },
                {
                    "name": "disabled",
                    "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
                    "jsDoc": "/**\r\n         * Any component that emits events should not do so if it is disabled.\r\n         * Note that this is not enforced, but the disabled property is made available.\r\n         * Users of this mix-in should ensure not to call \"de\" if this property is set to true.\r\n         * @attr\r\n         */",
                    "type": "boolean"
                },
                {
                    "name": "evCount",
                    "description": "Tracks how many times each event type was called.",
                    "jsDoc": "/**\r\n         * Tracks how many times each event type was called.\r\n         */",
                    "type": "{ [key: string]: number; }"
                },
                {
                    "name": "asIs",
                    "type": "\"\" | \"-changed\""
                },
                {
                    "name": "fetch",
                    "type": "boolean",
                    "testValues": {
                        "test1": true
                    }
                },
                {
                    "name": "as",
                    "description": "How to treat the response",
                    "jsDoc": "/**\r\n     * How to treat the response\r\n     * @attr\r\n     * @type {\"json\"|\"text\"}\r\n     */",
                    "type": "\"text\" | \"json\""
                },
                {
                    "name": "href",
                    "description": "URL (path) to fetch.",
                    "jsDoc": "/**\r\n     * URL (path) to fetch.\r\n     * @type {String}\r\n     * @attr\r\n     * \r\n     */",
                    "type": "string",
                    "testValues": {
                        "test1": "https://cdn.jsdelivr.net/npm/xtal-fetch/demo/generated.json"
                    }
                },
                {
                    "name": "value",
                    "type": "any"
                },
                {
                    "name": "result",
                    "description": "⚡ Fires event result-changed\r\nResult of fetch request",
                    "jsDoc": "/**\r\n     * ⚡ Fires event result-changed\r\n     * Result of fetch request\r\n     * @type {Object}\r\n     * \r\n     * \r\n     */",
                    "type": "any"
                },
                {
                    "name": "baseLinkId",
                    "type": "string"
                },
                {
                    "name": "reqInit",
                    "description": "Object to use for second parameter of fetch method.  Can parse the value from the attribute if the attribute is in JSON format.\r\nSupports JSON formatted attribute",
                    "jsDoc": "/**\r\n     * Object to use for second parameter of fetch method.  Can parse the value from the attribute if the attribute is in JSON format.\r\n     * Supports JSON formatted attribute\r\n     * @type {object}\r\n     * @attr req-init\r\n     */",
                    "type": "RequestInit | undefined"
                },
                {
                    "name": "cacheResults",
                    "description": "Indicates whether to pull the response from a previous identical fetch request from cache.",
                    "jsDoc": "/**\r\n     * Indicates whether to pull the response from a previous identical fetch request from cache.\r\n     * @attr cache-results\r\n     */",
                    "type": "boolean"
                },
                {
                    "name": "reqInitRequired",
                    "description": "Indicates that no fetch request should proceed until reqInit property / attribute is set.",
                    "jsDoc": "/**\r\n     * Indicates that no fetch request should proceed until reqInit property / attribute is set.\r\n     */",
                    "type": "boolean"
                },
                {
                    "name": "debounceDuration",
                    "description": "How long to pause between requests",
                    "jsDoc": "/**\r\n     * How long to pause between requests\r\n     * @attr debounce-duration\r\n     * @type {Number}\r\n     * \r\n     */",
                    "type": "number"
                },
                {
                    "name": "errorResponse",
                    "description": "Error response as an object\r\n⚡ Fires event error-response-changed",
                    "jsDoc": "/**\r\n     * Error response as an object\r\n     * ⚡ Fires event error-response-changed\r\n     * @type {Object}\r\n     * \r\n     */",
                    "type": "Response | null"
                },
                {
                    "name": "errorText",
                    "description": "Indicates the error text of the last request.\r\n⚡ Fires event error-text-changed.",
                    "jsDoc": "/**\r\n     * Indicates the error text of the last request.\r\n     * ⚡ Fires event error-text-changed.\r\n     * @type {String}\r\n     */",
                    "type": "string"
                },
                {
                    "name": "fetchInProgress",
                    "description": "Indicates Fetch is in progress\r\n⚡ Fires event fetch-in-progress-changed",
                    "jsDoc": "/**\r\n     * Indicates Fetch is in progress\r\n     * ⚡ Fires event fetch-in-progress-changed\r\n     * @type {Boolean}\r\n     */",
                    "type": "boolean"
                },
                {
                    "name": "insertResults",
                    "description": "Indicate whether to set the innerHTML of the web component with the response from the server.  \r\nMake sure the service is protected against XSS.",
                    "jsDoc": "/**\r\n     * Indicate whether to set the innerHTML of the web component with the response from the server.  \r\n     * Make sure the service is protected against XSS.\r\n     * @attr insert-results\r\n     */",
                    "type": "boolean"
                },
                {
                    "name": "abort",
                    "type": "boolean"
                },
                {
                    "name": "forEach",
                    "description": "Comma delimited list of properties to use as input for the fetch urls",
                    "jsDoc": "/**\n     * Comma delimited list of properties to use as input for the fetch urls\n     * @type {String}\n     * @attr for-each\n     */",
                    "type": "any"
                },
                {
                    "name": "setPath",
                    "description": "Path to set value inside each entity",
                    "jsDoc": "/**\n     * Path to set value inside each entity\n     * @type {String}\n     * attr set-path\n     */",
                    "type": "any"
                },
                {
                    "name": "inEntities",
                    "description": "Array of entities to use as input for building the url (along with forEach value).  Also place where result should go (using setPath attribute)",
                    "jsDoc": "/**\n     * Array of entities to use as input for building the url (along with forEach value).  Also place where result should go (using setPath attribute)\n     * @type {Array}\n     *\n     */",
                    "type": "any"
                }
            ],
            "events": [
                {
                    "name": "fetch-complete",
                    "description": "Fired when fetch is completed",
                    "detail": [
                        {
                            "name": "href",
                            "description": "URL that was fetched",
                            "type": "string"
                        },
                        {
                            "name": "result",
                            "description": "Result of fetch",
                            "type": "any"
                        }
                    ]
                },
                {
                    "name": "fetch-in-progress-changed",
                    "description": "Fired when fetch starts and ends",
                    "associatedPropName": "fetchInProgress",
                    "detail": [
                        {
                            "name": "value",
                            "description": "True if fetch in progress, false if not.",
                            "type": "boolean"
                        }
                    ]
                },
                {
                    "name": "error-text-changed",
                    "description": "Fired when fetch error received or cleared.",
                    "associatedPropName": "errorText",
                    "detail": [
                        {
                            "name": "value",
                            "description": "Value of error text (if any).",
                            "type": "string"
                        }
                    ]
                },
                {
                    "name": "error-response-changed"
                },
                {
                    "name": "result-changed",
                    "description": "Result of fetch changed",
                    "associatedPropName": "result",
                    "detail": [
                        {
                            "name": "value",
                            "description": "Result of fetch",
                            "type": "any"
                        }
                    ]
                }
            ],
            "slots": [],
            "selfResolvingModulePath": "https://unpkg.com/xtal-fetch@0.0.72/xtal-fetch.js?module"
        },
        {
            "name": "xtal-fetch-get",
            "description": "Barebones custom element that can make fetch calls.",
            "jsDoc": "/**\n *  Barebones custom element that can make fetch calls.\n * @element xtal-fetch-get\n * @event result-changed\n */",
            "attributes": [
                {
                    "name": "disabled",
                    "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
                    "jsDoc": "/**\r\n         * Any component that emits events should not do so if it is disabled.\r\n         * Note that this is not enforced, but the disabled property is made available.\r\n         * Users of this mix-in should ensure not to call \"de\" if this property is set to true.\r\n         * @attr\r\n         */",
                    "type": "boolean"
                },
                {
                    "name": "as",
                    "description": "How to treat the response",
                    "jsDoc": "/**\n     * How to treat the response\n     * @attr\n     * @type {\"json\"|\"text\"}\n     */",
                    "type": "string"
                },
                {
                    "name": "href",
                    "description": "URL (path) to fetch.",
                    "jsDoc": "/**\n     * URL (path) to fetch.\n     * @type {String}\n     * @attr\n     *\n     */",
                    "type": "any"
                }
            ],
            "properties": [
                {
                    "name": "val",
                    "type": "\"set\" | \"remove\""
                },
                {
                    "name": "disabled",
                    "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
                    "jsDoc": "/**\r\n         * Any component that emits events should not do so if it is disabled.\r\n         * Note that this is not enforced, but the disabled property is made available.\r\n         * Users of this mix-in should ensure not to call \"de\" if this property is set to true.\r\n         * @attr\r\n         */",
                    "type": "boolean"
                },
                {
                    "name": "evCount",
                    "description": "Tracks how many times each event type was called.",
                    "jsDoc": "/**\r\n         * Tracks how many times each event type was called.\r\n         */",
                    "type": "{ [key: string]: number; }"
                },
                {
                    "name": "asIs",
                    "type": "\"\" | \"-changed\""
                },
                {
                    "name": "fetch",
                    "type": "boolean | undefined",
                    "testValues": {
                        "test1": true
                    }
                },
                {
                    "name": "as",
                    "description": "How to treat the response",
                    "jsDoc": "/**\n     * How to treat the response\n     * @attr\n     * @type {\"json\"|\"text\"}\n     */",
                    "type": "string"
                },
                {
                    "name": "href",
                    "description": "URL (path) to fetch.",
                    "jsDoc": "/**\n     * URL (path) to fetch.\n     * @type {String}\n     * @attr\n     *\n     */",
                    "type": "any",
                    "testValues": {
                        "test1": "https://cdn.jsdelivr.net/npm/xtal-fetch/demo/generated.json"
                    }
                },
                {
                    "name": "result",
                    "description": "⚡ Fires event result-changed\nResult of fetch request",
                    "jsDoc": "/**\n     * ⚡ Fires event result-changed\n     * Result of fetch request\n     * @type {Object}\n     *\n     *\n     */",
                    "type": "any"
                }
            ],
            "events": [
                {
                    "name": "result-changed",
                    "detail": [
                        {
                            "name": "value",
                            "description": "Result of fetch",
                            "type": "any"
                        }
                    ],
                    "testExpectedValues": {
                        "test1": {
                            "value": [
                                {
                                    "_id": "580d3fbba86e6de6accf5cd1",
                                    "index": 0,
                                    "guid": "23bc285a-1c9e-4975-9c85-f3203721444e",
                                    "isActive": false,
                                    "balance": "$3,317.88",
                                    "picture": "http://placehold.it/32x32",
                                    "age": 37,
                                    "eyeColor": "brown",
                                    "name": "Cooper Patel",
                                    "gender": "male",
                                    "company": "UNISURE",
                                    "email": "cooperpatel@unisure.com",
                                    "phone": "+1 (821) 531-3163",
                                    "address": "962 Varick Avenue, Bentley, Delaware, 1319",
                                    "about": "Aliqua reprehenderit sit reprehenderit cillum anim duis reprehenderit ea deserunt veniam aliquip pariatur aute. Anim sint ea sunt ut sunt sint incididunt dolor. Ipsum ex dolor consequat aute. Eiusmod mollit qui nulla labore Lorem aute occaecat cillum irure fugiat. Nisi proident anim quis laboris veniam aute deserunt eu ipsum culpa eiusmod duis et pariatur.\r\n",
                                    "registered": "2015-06-20T05:36:12 +04:00",
                                    "latitude": -53.862758,
                                    "longitude": -135.928028,
                                    "tags": [
                                        "et",
                                        "deserunt",
                                        "proident",
                                        "proident",
                                        "qui",
                                        "magna",
                                        "voluptate"
                                    ],
                                    "friends": [
                                        {
                                            "id": 0,
                                            "name": "Stuart Massey"
                                        },
                                        {
                                            "id": 1,
                                            "name": "Spencer Garrett"
                                        },
                                        {
                                            "id": 2,
                                            "name": "Petty Houston"
                                        }
                                    ],
                                    "greeting": "Hello, Cooper Patel! You have 1 unread messages.",
                                    "favoriteFruit": "strawberry"
                                },
                                {
                                    "_id": "580d3fbb28cb6eedfb381e86",
                                    "index": 1,
                                    "guid": "ce10cf67-7499-466d-bffc-6e793e280f0a",
                                    "isActive": false,
                                    "balance": "$3,285.45",
                                    "picture": "http://placehold.it/32x32",
                                    "age": 40,
                                    "eyeColor": "green",
                                    "name": "Randolph Cameron",
                                    "gender": "male",
                                    "company": "AQUACINE",
                                    "email": "randolphcameron@aquacine.com",
                                    "phone": "+1 (980) 496-3651",
                                    "address": "143 Jackson Court, Delshire, Vermont, 1273",
                                    "about": "Cillum do laboris laborum aliquip labore nisi. Do dolore irure voluptate reprehenderit consequat. Laborum cupidatat cillum dolore officia elit.\r\n",
                                    "registered": "2014-04-02T10:49:07 +04:00",
                                    "latitude": 42.521681,
                                    "longitude": -152.496821,
                                    "tags": [
                                        "sint",
                                        "fugiat",
                                        "amet",
                                        "dolore",
                                        "non",
                                        "nostrud",
                                        "labore"
                                    ],
                                    "friends": [
                                        {
                                            "id": 0,
                                            "name": "Leigh Rojas"
                                        },
                                        {
                                            "id": 1,
                                            "name": "Hale Scott"
                                        },
                                        {
                                            "id": 2,
                                            "name": "Head Jones"
                                        }
                                    ],
                                    "greeting": "Hello, Randolph Cameron! You have 7 unread messages.",
                                    "favoriteFruit": "banana"
                                },
                                {
                                    "_id": "580d3fbb3e4f98e9c1ed509b",
                                    "index": 2,
                                    "guid": "c973f141-319c-441f-8cb7-b7a08114b3cc",
                                    "isActive": true,
                                    "balance": "$3,205.61",
                                    "picture": "http://placehold.it/32x32",
                                    "age": 40,
                                    "eyeColor": "green",
                                    "name": "Vivian Jacobson",
                                    "gender": "female",
                                    "company": "PARLEYNET",
                                    "email": "vivianjacobson@parleynet.com",
                                    "phone": "+1 (903) 441-2185",
                                    "address": "556 Albemarle Terrace, Stagecoach, Idaho, 4267",
                                    "about": "Ex anim pariatur eu mollit voluptate. Ad qui magna amet ullamco officia fugiat dolore elit cupidatat. Aute cupidatat nostrud consectetur est aute incididunt duis aliquip. Ex laboris incididunt nulla est culpa reprehenderit dolor tempor.\r\n",
                                    "registered": "2015-02-22T10:51:13 +05:00",
                                    "latitude": 28.14754,
                                    "longitude": -84.275715,
                                    "tags": [
                                        "nostrud",
                                        "in",
                                        "laborum",
                                        "ut",
                                        "reprehenderit",
                                        "deserunt",
                                        "pariatur"
                                    ],
                                    "friends": [
                                        {
                                            "id": 0,
                                            "name": "Whitney Herman"
                                        },
                                        {
                                            "id": 1,
                                            "name": "Schultz Cooper"
                                        },
                                        {
                                            "id": 2,
                                            "name": "Delaney Nicholson"
                                        }
                                    ],
                                    "greeting": "Hello, Vivian Jacobson! You have 6 unread messages.",
                                    "favoriteFruit": "apple"
                                }
                            ]
                        }
                    }
                }
            ],
            "slots": [],
            "selfResolvingModulePath": "https://unpkg.com/xtal-fetch@0.0.72/xtal-fetch-get.js?module"
        },
        {
            "name": "xtal-fetch-req",
            "description": "Feature rich custom element that can make fetch calls, including post requests.",
            "jsDoc": "/**\n * Feature rich custom element that can make fetch calls, including post requests.\n * @element xtal-fetch-req\n * @event error-response-changed\n * @event error-text-changed\n * @event fetch-in-progress-changed\n * @event fetch-complete\n */",
            "attributes": [
                {
                    "name": "disabled",
                    "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
                    "jsDoc": "/**\r\n         * Any component that emits events should not do so if it is disabled.\r\n         * Note that this is not enforced, but the disabled property is made available.\r\n         * Users of this mix-in should ensure not to call \"de\" if this property is set to true.\r\n         * @attr\r\n         */",
                    "type": "boolean"
                },
                {
                    "name": "as",
                    "description": "How to treat the response",
                    "jsDoc": "/**\r\n     * How to treat the response\r\n     * @attr\r\n     * @type {\"json\"|\"text\"}\r\n     */",
                    "type": "\"text\" | \"json\""
                },
                {
                    "name": "href",
                    "description": "URL (path) to fetch.",
                    "jsDoc": "/**\r\n     * URL (path) to fetch.\r\n     * @type {String}\r\n     * @attr\r\n     * \r\n     */",
                    "type": "string"
                },
                {
                    "name": "req-init",
                    "description": "Object to use for second parameter of fetch method.  Can parse the value from the attribute if the attribute is in JSON format.\nSupports JSON formatted attribute",
                    "jsDoc": "/**\n     * Object to use for second parameter of fetch method.  Can parse the value from the attribute if the attribute is in JSON format.\n     * Supports JSON formatted attribute\n     * @type {object}\n     * @attr req-init\n     */",
                    "type": "any"
                },
                {
                    "name": "cache-results",
                    "description": "Indicates whether to pull the response from a previous identical fetch request from cache.",
                    "jsDoc": "/**\n     * Indicates whether to pull the response from a previous identical fetch request from cache.\n     * @attr cache-results\n     */",
                    "type": "boolean"
                },
                {
                    "name": "debounce-duration",
                    "description": "How long to pause between requests",
                    "jsDoc": "/**\n     * How long to pause between requests\n     * @attr debounce-duration\n     * @type {Number}\n     *\n     */",
                    "type": "number | undefined"
                },
                {
                    "name": "insert-results",
                    "description": "Indicate whether to set the innerHTML of the web component with the response from the server.\nMake sure the service is protected against XSS.",
                    "jsDoc": "/**\n     * Indicate whether to set the innerHTML of the web component with the response from the server.\n     * Make sure the service is protected against XSS.\n     * @attr insert-results\n     */",
                    "type": "boolean"
                }
            ],
            "properties": [
                {
                    "name": "val",
                    "type": "\"set\" | \"remove\""
                },
                {
                    "name": "disabled",
                    "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
                    "jsDoc": "/**\r\n         * Any component that emits events should not do so if it is disabled.\r\n         * Note that this is not enforced, but the disabled property is made available.\r\n         * Users of this mix-in should ensure not to call \"de\" if this property is set to true.\r\n         * @attr\r\n         */",
                    "type": "boolean"
                },
                {
                    "name": "evCount",
                    "description": "Tracks how many times each event type was called.",
                    "jsDoc": "/**\r\n         * Tracks how many times each event type was called.\r\n         */",
                    "type": "{ [key: string]: number; }"
                },
                {
                    "name": "asIs",
                    "type": "\"\" | \"-changed\""
                },
                {
                    "name": "fetch",
                    "type": "boolean",
                    "testValues": {
                        "test1": true
                    }
                },
                {
                    "name": "as",
                    "description": "How to treat the response",
                    "jsDoc": "/**\r\n     * How to treat the response\r\n     * @attr\r\n     * @type {\"json\"|\"text\"}\r\n     */",
                    "type": "\"text\" | \"json\""
                },
                {
                    "name": "href",
                    "description": "URL (path) to fetch.",
                    "jsDoc": "/**\r\n     * URL (path) to fetch.\r\n     * @type {String}\r\n     * @attr\r\n     * \r\n     */",
                    "type": "string",
                    "testValues": {
                        "test1": "https://cdn.jsdelivr.net/npm/xtal-fetch/demo/generated.json"
                    }
                },
                {
                    "name": "value",
                    "type": "any"
                },
                {
                    "name": "result",
                    "description": "⚡ Fires event result-changed\r\nResult of fetch request",
                    "jsDoc": "/**\r\n     * ⚡ Fires event result-changed\r\n     * Result of fetch request\r\n     * @type {Object}\r\n     * \r\n     * \r\n     */",
                    "type": "any"
                },
                {
                    "name": "baseLinkId",
                    "type": "string"
                },
                {
                    "name": "reqInit",
                    "description": "Object to use for second parameter of fetch method.  Can parse the value from the attribute if the attribute is in JSON format.\nSupports JSON formatted attribute",
                    "jsDoc": "/**\n     * Object to use for second parameter of fetch method.  Can parse the value from the attribute if the attribute is in JSON format.\n     * Supports JSON formatted attribute\n     * @type {object}\n     * @attr req-init\n     */",
                    "type": "any"
                },
                {
                    "name": "cacheResults",
                    "description": "Indicates whether to pull the response from a previous identical fetch request from cache.",
                    "jsDoc": "/**\n     * Indicates whether to pull the response from a previous identical fetch request from cache.\n     * @attr cache-results\n     */",
                    "type": "boolean"
                },
                {
                    "name": "reqInitRequired",
                    "description": "Indicates that no fetch request should proceed until reqInit property / attribute is set.",
                    "jsDoc": "/**\n     * Indicates that no fetch request should proceed until reqInit property / attribute is set.\n     */",
                    "type": "boolean"
                },
                {
                    "name": "debounceDuration",
                    "description": "How long to pause between requests",
                    "jsDoc": "/**\n     * How long to pause between requests\n     * @attr debounce-duration\n     * @type {Number}\n     *\n     */",
                    "type": "number | undefined"
                },
                {
                    "name": "errorResponse",
                    "description": "Error response as an object\n⚡ Fires event error-response-changed",
                    "jsDoc": "/**\n     * Error response as an object\n     * ⚡ Fires event error-response-changed\n     * @type {Object}\n     *\n     */",
                    "type": "any"
                },
                {
                    "name": "errorText",
                    "description": "Indicates the error text of the last request.\n⚡ Fires event error-text-changed.",
                    "jsDoc": "/**\n     * Indicates the error text of the last request.\n     * ⚡ Fires event error-text-changed.\n     * @type {String}\n     */",
                    "type": "any"
                },
                {
                    "name": "fetchInProgress",
                    "description": "Indicates Fetch is in progress\n⚡ Fires event fetch-in-progress-changed",
                    "jsDoc": "/**\n     * Indicates Fetch is in progress\n     * ⚡ Fires event fetch-in-progress-changed\n     * @type {Boolean}\n     */",
                    "type": "any"
                },
                {
                    "name": "insertResults",
                    "description": "Indicate whether to set the innerHTML of the web component with the response from the server.\nMake sure the service is protected against XSS.",
                    "jsDoc": "/**\n     * Indicate whether to set the innerHTML of the web component with the response from the server.\n     * Make sure the service is protected against XSS.\n     * @attr insert-results\n     */",
                    "type": "boolean"
                },
                {
                    "name": "abort",
                    "type": "any"
                }
            ],
            "events": [
                {
                    "name": "fetch-complete",
                    "detail": [
                        {
                            "name": "href",
                            "description": "URL that was fetched",
                            "type": "string"
                        },
                        {
                            "name": "result",
                            "description": "Result of fetch",
                            "type": "any"
                        }
                    ]
                },
                {
                    "name": "fetch-in-progress-changed",
                    "detail": [
                        {
                            "name": "value",
                            "description": "True if fetch in progress, false if not.",
                            "type": "boolean"
                        }
                    ]
                },
                {
                    "name": "error-text-changed",
                    "detail": [
                        {
                            "name": "value",
                            "description": "Value of error text (if any).",
                            "type": "string"
                        }
                    ]
                },
                {
                    "name": "error-response-changed"
                },
                {
                    "name": "result-changed",
                    "detail": [
                        {
                            "name": "value",
                            "description": "Result of fetch",
                            "type": "any"
                        }
                    ]
                }
            ],
            "slots": [],
            "selfResolvingModulePath": "https://unpkg.com/xtal-fetch@0.0.72/xtal-fetch-req.js?module"
        }
    ]
}