{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "IE11-polyfill.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "MyExample.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MyExample",
          "members": [
            {
              "kind": "field",
              "name": "myProp",
              "type": {
                "text": "string"
              },
              "default": "'myVal'"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "my-example",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MyExample",
          "declaration": {
            "name": "MyExample",
            "module": "MyExample.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "MyExample.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MyExample",
          "members": [
            {
              "kind": "field",
              "name": "myProp",
              "type": {
                "text": "string"
              },
              "default": "'myVal'"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "my-example",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MyExample",
          "declaration": {
            "name": "MyExample",
            "module": "MyExample.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "patchJSON.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "types.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "xtal-fetch-entities.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Entire feature set for xtal-fetch, including multiple entity requests.",
          "name": "XtalFetchEntities",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'xtal-fetch-entities'",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "hasAllThreeProps"
            },
            {
              "kind": "field",
              "name": "hasAnyThreeProps"
            },
            {
              "kind": "field",
              "name": "controller",
              "type": {
                "text": "AbortController | undefined"
              },
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\r\n    triggerDebounce, updateDebounce\r\n]",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "_cachedResults",
              "type": {
                "text": "{ [key: string]: any }"
              },
              "privacy": "private",
              "default": "{}",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "cachedResults",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "method",
              "name": "debounce",
              "parameters": [
                {
                  "name": "func",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "wait",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "immediate",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "__loadNewUrlDebouncer",
              "type": {
                "text": "any"
              },
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "method",
              "name": "debounceDurationHandler",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "cache",
              "type": {
                "text": "{[key: string]: any}"
              },
              "static": true,
              "default": "{}",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xc.Rx(this)",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "prop",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "_initDisp",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ],
          "superclass": {
            "name": "XtalFetchReq",
            "module": "/xtal-fetch-req.js"
          },
          "tagName": "xtal-fetch-entities",
          "customElement": true,
          "events": [
            {
              "name": "error-response-changed",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "error-text-changed",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "fetch-in-progress-changed",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "fetch-complete",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "result-changed",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "XtalFetchEntities",
          "declaration": {
            "name": "XtalFetchEntities",
            "module": "xtal-fetch-entities.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "xtal-fetch-entities.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Entire feature set for xtal-fetch, including multiple entity requests.",
          "name": "XtalFetchEntities",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'xtal-fetch-entities'",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "hasAllThreeProps"
            },
            {
              "kind": "field",
              "name": "hasAnyThreeProps"
            },
            {
              "kind": "field",
              "name": "controller",
              "type": {
                "text": "AbortController | undefined"
              },
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\r\n    triggerDebounce, updateDebounce\r\n]",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "_cachedResults",
              "type": {
                "text": "{ [key: string]: any }"
              },
              "privacy": "private",
              "default": "{}",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "cachedResults",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "method",
              "name": "debounce",
              "parameters": [
                {
                  "name": "func",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "wait",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "immediate",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "__loadNewUrlDebouncer",
              "type": {
                "text": "any"
              },
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "method",
              "name": "debounceDurationHandler",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "cache",
              "type": {
                "text": "{[key: string]: any}"
              },
              "static": true,
              "default": "{}",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xc.Rx(this)",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "prop",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "_initDisp",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ],
          "superclass": {
            "name": "XtalFetchReq",
            "module": "/xtal-fetch-req.js"
          },
          "tagName": "xtal-fetch-entities",
          "customElement": true,
          "events": [
            {
              "name": "error-response-changed",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "error-text-changed",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "fetch-in-progress-changed",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "fetch-complete",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "result-changed",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "XtalFetchEntities",
          "declaration": {
            "name": "XtalFetchEntities",
            "module": "xtal-fetch-entities.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "xtal-fetch-example1.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "XtalFetchExample1",
          "members": [
            {
              "kind": "field",
              "name": "fetch",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "\"https://unpkg.com/xtal-fetch@0.0.75/demo/generated.json\""
            },
            {
              "kind": "field",
              "name": "resultChangedContract",
              "type": {
                "text": "object"
              },
              "default": "{\r\n            trigger: /* JS */ `\r\n    import 'https://unpkg.com/xtal-fetch/xtal-fetch-entities.js?module';\r\n    `,\r\n            expectedEvent: {\r\n                name: \"result-changed\",\r\n                detail: {\r\n                    value: [\r\n                        {\r\n                            _id: \"580d3fbba86e6de6accf5cd1\",\r\n                            index: 0,\r\n                            guid: \"23bc285a-1c9e-4975-9c85-f3203721444e\",\r\n                            isActive: false,\r\n                            balance: \"$3,317.88\",\r\n                            picture: \"http://placehold.it/32x32\",\r\n                            age: 37,\r\n                            eyeColor: \"brown\",\r\n                            name: \"Cooper Patel\",\r\n                            gender: \"male\",\r\n                            company: \"UNISURE\",\r\n                            email: \"cooperpatel@unisure.com\",\r\n                            phone: \"+1 (821) 531-3163\",\r\n                            address: \"962 Varick Avenue, Bentley, Delaware, 1319\",\r\n                            about: \"Aliqua reprehenderit sit reprehenderit cillum anim duis reprehenderit ea deserunt veniam aliquip pariatur aute. Anim sint ea sunt ut sunt sint incididunt dolor. Ipsum ex dolor consequat aute. Eiusmod mollit qui nulla labore Lorem aute occaecat cillum irure fugiat. Nisi proident anim quis laboris veniam aute deserunt eu ipsum culpa eiusmod duis et pariatur.\\r\\n\",\r\n                            registered: \"2015-06-20T05:36:12 +04:00\",\r\n                            latitude: -53.862758,\r\n                            longitude: -135.928028,\r\n                            tags: [\r\n                                \"et\",\r\n                                \"deserunt\",\r\n                                \"proident\",\r\n                                \"proident\",\r\n                                \"qui\",\r\n                                \"magna\",\r\n                                \"voluptate\"\r\n                            ],\r\n                            friends: [\r\n                                {\r\n                                    id: 0,\r\n                                    name: \"Stuart Massey\"\r\n                                },\r\n                                {\r\n                                    id: 1,\r\n                                    name: \"Spencer Garrett\"\r\n                                },\r\n                                {\r\n                                    id: 2,\r\n                                    name: \"Petty Houston\"\r\n                                }\r\n                            ],\r\n                            greeting: \"Hello, Cooper Patel! You have 1 unread messages.\",\r\n                            favoriteFruit: \"strawberry\"\r\n                        },\r\n                        {\r\n                            _id: \"580d3fbb28cb6eedfb381e86\",\r\n                            index: 1,\r\n                            guid: \"ce10cf67-7499-466d-bffc-6e793e280f0a\",\r\n                            isActive: false,\r\n                            balance: \"$3,285.45\",\r\n                            picture: \"http://placehold.it/32x32\",\r\n                            age: 40,\r\n                            eyeColor: \"green\",\r\n                            name: \"Randolph Cameron\",\r\n                            gender: \"male\",\r\n                            company: \"AQUACINE\",\r\n                            email: \"randolphcameron@aquacine.com\",\r\n                            phone: \"+1 (980) 496-3651\",\r\n                            address: \"143 Jackson Court, Delshire, Vermont, 1273\",\r\n                            about: \"Cillum do laboris laborum aliquip labore nisi. Do dolore irure voluptate reprehenderit consequat. Laborum cupidatat cillum dolore officia elit.\\r\\n\",\r\n                            registered: \"2014-04-02T10:49:07 +04:00\",\r\n                            latitude: 42.521681,\r\n                            longitude: -152.496821,\r\n                            tags: [\r\n                                \"sint\",\r\n                                \"fugiat\",\r\n                                \"amet\",\r\n                                \"dolore\",\r\n                                \"non\",\r\n                                \"nostrud\",\r\n                                \"labore\"\r\n                            ],\r\n                            friends: [\r\n                                {\r\n                                    id: 0,\r\n                                    name: \"Leigh Rojas\"\r\n                                },\r\n                                {\r\n                                    id: 1,\r\n                                    name: \"Hale Scott\"\r\n                                },\r\n                                {\r\n                                    id: 2,\r\n                                    name: \"Head Jones\"\r\n                                }\r\n                            ],\r\n                            greeting: \"Hello, Randolph Cameron! You have 7 unread messages.\",\r\n                            favoriteFruit: \"banana\"\r\n                        },\r\n                        {\r\n                            _id: \"580d3fbb3e4f98e9c1ed509b\",\r\n                            index: 2,\r\n                            guid: \"c973f141-319c-441f-8cb7-b7a08114b3cc\",\r\n                            isActive: true,\r\n                            balance: \"$3,205.61\",\r\n                            picture: \"http://placehold.it/32x32\",\r\n                            age: 40,\r\n                            eyeColor: \"green\",\r\n                            name: \"Vivian Jacobson\",\r\n                            gender: \"female\",\r\n                            company: \"PARLEYNET\",\r\n                            email: \"vivianjacobson@parleynet.com\",\r\n                            phone: \"+1 (903) 441-2185\",\r\n                            address: \"556 Albemarle Terrace, Stagecoach, Idaho, 4267\",\r\n                            about: \"Ex anim pariatur eu mollit voluptate. Ad qui magna amet ullamco officia fugiat dolore elit cupidatat. Aute cupidatat nostrud consectetur est aute incididunt duis aliquip. Ex laboris incididunt nulla est culpa reprehenderit dolor tempor.\\r\\n\",\r\n                            registered: \"2015-02-22T10:51:13 +05:00\",\r\n                            latitude: 28.14754,\r\n                            longitude: -84.275715,\r\n                            tags: [\r\n                                \"nostrud\",\r\n                                \"in\",\r\n                                \"laborum\",\r\n                                \"ut\",\r\n                                \"reprehenderit\",\r\n                                \"deserunt\",\r\n                                \"pariatur\"\r\n                            ],\r\n                            friends: [\r\n                                {\r\n                                    id: 0,\r\n                                    name: \"Whitney Herman\"\r\n                                },\r\n                                {\r\n                                    id: 1,\r\n                                    name: \"Schultz Cooper\"\r\n                                },\r\n                                {\r\n                                    id: 2,\r\n                                    name: \"Delaney Nicholson\"\r\n                                }\r\n                            ],\r\n                            greeting: \"Hello, Vivian Jacobson! You have 6 unread messages.\",\r\n                            favoriteFruit: \"apple\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        }"
            },
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'xtal-fetch-entities'",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "hasAllThreeProps",
              "inheritedFrom": {
                "name": "XtalFetchEntities",
                "module": "xtal-fetch-entities.ts"
              }
            },
            {
              "kind": "field",
              "name": "hasAnyThreeProps",
              "inheritedFrom": {
                "name": "XtalFetchEntities",
                "module": "xtal-fetch-entities.ts"
              }
            },
            {
              "kind": "field",
              "name": "controller",
              "type": {
                "text": "AbortController | undefined"
              },
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\r\n    triggerDebounce, updateDebounce\r\n]",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "_cachedResults",
              "type": {
                "text": "{ [key: string]: any }"
              },
              "privacy": "private",
              "default": "{}",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "cachedResults",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "method",
              "name": "debounce",
              "parameters": [
                {
                  "name": "func",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "wait",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "immediate",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "__loadNewUrlDebouncer",
              "type": {
                "text": "any"
              },
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "method",
              "name": "debounceDurationHandler",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "cache",
              "type": {
                "text": "{[key: string]: any}"
              },
              "static": true,
              "default": "{}",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xc.Rx(this)",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "prop",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "_initDisp",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ],
          "superclass": {
            "name": "XtalFetchEntities",
            "module": "/xtal-fetch-entities.js"
          },
          "tagName": "xtal-fetch",
          "customElement": true,
          "attributes": [
            {
              "name": "disabled",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ],
          "events": [
            {
              "name": "error-response-changed",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "error-text-changed",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "fetch-in-progress-changed",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "fetch-complete",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "result-changed",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "XtalFetchExample1",
          "declaration": {
            "name": "XtalFetchExample1",
            "module": "xtal-fetch-example1.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "xtal-fetch-example1.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "XtalFetchExample1",
          "members": [
            {
              "kind": "field",
              "name": "fetch",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "\"https://unpkg.com/xtal-fetch@0.0.75/demo/generated.json\""
            },
            {
              "kind": "field",
              "name": "resultChangedContract",
              "type": {
                "text": "XtalFetchTest<\"result-changed\", \"result\">"
              },
              "default": "{\r\n    trigger: /* JS */`\r\n    import 'https://unpkg.com/xtal-fetch/xtal-fetch-entities.js?module';\r\n    `,\r\n    expectedEvent: {\r\n      name: \"result-changed\",\r\n      detail: {\r\n        value: [\r\n          {\r\n            _id: \"580d3fbba86e6de6accf5cd1\",\r\n            index: 0,\r\n            guid: \"23bc285a-1c9e-4975-9c85-f3203721444e\",\r\n            isActive: false,\r\n            balance: \"$3,317.88\",\r\n            picture: \"http://placehold.it/32x32\",\r\n            age: 37,\r\n            eyeColor: \"brown\",\r\n            name: \"Cooper Patel\",\r\n            gender: \"male\",\r\n            company: \"UNISURE\",\r\n            email: \"cooperpatel@unisure.com\",\r\n            phone: \"+1 (821) 531-3163\",\r\n            address: \"962 Varick Avenue, Bentley, Delaware, 1319\",\r\n            about:\r\n              \"Aliqua reprehenderit sit reprehenderit cillum anim duis reprehenderit ea deserunt veniam aliquip pariatur aute. Anim sint ea sunt ut sunt sint incididunt dolor. Ipsum ex dolor consequat aute. Eiusmod mollit qui nulla labore Lorem aute occaecat cillum irure fugiat. Nisi proident anim quis laboris veniam aute deserunt eu ipsum culpa eiusmod duis et pariatur.\\r\\n\",\r\n            registered: \"2015-06-20T05:36:12 +04:00\",\r\n            latitude: -53.862758,\r\n            longitude: -135.928028,\r\n            tags: [\r\n              \"et\",\r\n              \"deserunt\",\r\n              \"proident\",\r\n              \"proident\",\r\n              \"qui\",\r\n              \"magna\",\r\n              \"voluptate\"\r\n            ],\r\n            friends: [\r\n              {\r\n                id: 0,\r\n                name: \"Stuart Massey\"\r\n              },\r\n              {\r\n                id: 1,\r\n                name: \"Spencer Garrett\"\r\n              },\r\n              {\r\n                id: 2,\r\n                name: \"Petty Houston\"\r\n              }\r\n            ],\r\n            greeting: \"Hello, Cooper Patel! You have 1 unread messages.\",\r\n            favoriteFruit: \"strawberry\"\r\n          },\r\n          {\r\n            _id: \"580d3fbb28cb6eedfb381e86\",\r\n            index: 1,\r\n            guid: \"ce10cf67-7499-466d-bffc-6e793e280f0a\",\r\n            isActive: false,\r\n            balance: \"$3,285.45\",\r\n            picture: \"http://placehold.it/32x32\",\r\n            age: 40,\r\n            eyeColor: \"green\",\r\n            name: \"Randolph Cameron\",\r\n            gender: \"male\",\r\n            company: \"AQUACINE\",\r\n            email: \"randolphcameron@aquacine.com\",\r\n            phone: \"+1 (980) 496-3651\",\r\n            address: \"143 Jackson Court, Delshire, Vermont, 1273\",\r\n            about:\r\n              \"Cillum do laboris laborum aliquip labore nisi. Do dolore irure voluptate reprehenderit consequat. Laborum cupidatat cillum dolore officia elit.\\r\\n\",\r\n            registered: \"2014-04-02T10:49:07 +04:00\",\r\n            latitude: 42.521681,\r\n            longitude: -152.496821,\r\n            tags: [\r\n              \"sint\",\r\n              \"fugiat\",\r\n              \"amet\",\r\n              \"dolore\",\r\n              \"non\",\r\n              \"nostrud\",\r\n              \"labore\"\r\n            ],\r\n            friends: [\r\n              {\r\n                id: 0,\r\n                name: \"Leigh Rojas\"\r\n              },\r\n              {\r\n                id: 1,\r\n                name: \"Hale Scott\"\r\n              },\r\n              {\r\n                id: 2,\r\n                name: \"Head Jones\"\r\n              }\r\n            ],\r\n            greeting: \"Hello, Randolph Cameron! You have 7 unread messages.\",\r\n            favoriteFruit: \"banana\"\r\n          },\r\n          {\r\n            _id: \"580d3fbb3e4f98e9c1ed509b\",\r\n            index: 2,\r\n            guid: \"c973f141-319c-441f-8cb7-b7a08114b3cc\",\r\n            isActive: true,\r\n            balance: \"$3,205.61\",\r\n            picture: \"http://placehold.it/32x32\",\r\n            age: 40,\r\n            eyeColor: \"green\",\r\n            name: \"Vivian Jacobson\",\r\n            gender: \"female\",\r\n            company: \"PARLEYNET\",\r\n            email: \"vivianjacobson@parleynet.com\",\r\n            phone: \"+1 (903) 441-2185\",\r\n            address: \"556 Albemarle Terrace, Stagecoach, Idaho, 4267\",\r\n            about:\r\n              \"Ex anim pariatur eu mollit voluptate. Ad qui magna amet ullamco officia fugiat dolore elit cupidatat. Aute cupidatat nostrud consectetur est aute incididunt duis aliquip. Ex laboris incididunt nulla est culpa reprehenderit dolor tempor.\\r\\n\",\r\n            registered: \"2015-02-22T10:51:13 +05:00\",\r\n            latitude: 28.14754,\r\n            longitude: -84.275715,\r\n            tags: [\r\n              \"nostrud\",\r\n              \"in\",\r\n              \"laborum\",\r\n              \"ut\",\r\n              \"reprehenderit\",\r\n              \"deserunt\",\r\n              \"pariatur\"\r\n            ],\r\n            friends: [\r\n              {\r\n                id: 0,\r\n                name: \"Whitney Herman\"\r\n              },\r\n              {\r\n                id: 1,\r\n                name: \"Schultz Cooper\"\r\n              },\r\n              {\r\n                id: 2,\r\n                name: \"Delaney Nicholson\"\r\n              }\r\n            ],\r\n            greeting: \"Hello, Vivian Jacobson! You have 6 unread messages.\",\r\n            favoriteFruit: \"apple\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }"
            },
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'xtal-fetch-entities'",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "hasAllThreeProps",
              "inheritedFrom": {
                "name": "XtalFetchEntities",
                "module": "xtal-fetch-entities.ts"
              }
            },
            {
              "kind": "field",
              "name": "hasAnyThreeProps",
              "inheritedFrom": {
                "name": "XtalFetchEntities",
                "module": "xtal-fetch-entities.ts"
              }
            },
            {
              "kind": "field",
              "name": "controller",
              "type": {
                "text": "AbortController | undefined"
              },
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\r\n    triggerDebounce, updateDebounce\r\n]",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "_cachedResults",
              "type": {
                "text": "{ [key: string]: any }"
              },
              "privacy": "private",
              "default": "{}",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "cachedResults",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "method",
              "name": "debounce",
              "parameters": [
                {
                  "name": "func",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "wait",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "immediate",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "__loadNewUrlDebouncer",
              "type": {
                "text": "any"
              },
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "method",
              "name": "debounceDurationHandler",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "kind": "field",
              "name": "cache",
              "type": {
                "text": "{[key: string]: any}"
              },
              "static": true,
              "default": "{}",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xc.Rx(this)",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "prop",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "_initDisp",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ],
          "superclass": {
            "name": "XtalFetchEntities",
            "module": "/xtal-fetch-entities.js"
          },
          "tagName": "xtal-fetch",
          "customElement": true,
          "attributes": [
            {
              "name": "disabled",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ],
          "events": [
            {
              "name": "error-response-changed",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "error-text-changed",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "fetch-in-progress-changed",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "fetch-complete",
              "inheritedFrom": {
                "name": "XtalFetchReq",
                "module": "xtal-fetch-req.ts"
              }
            },
            {
              "name": "result-changed",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "XtalFetchExample1",
          "declaration": {
            "name": "XtalFetchExample1",
            "module": "xtal-fetch-example1.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "xtal-fetch-get.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Bare-bones custom element that can make fetch calls.",
          "name": "XtalFetchGet",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'xtal-fetch-get'"
            },
            {
              "kind": "field",
              "name": "cache",
              "type": {
                "text": "object"
              },
              "static": true,
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\n    linkResult\n]",
              "type": {
                "text": "array"
              }
            },
            {
              "kind": "field",
              "name": "reactor",
              "default": "new xc.Rx(this)"
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this"
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "name"
                },
                {
                  "name": "prop"
                },
                {
                  "name": "nv"
                }
              ]
            },
            {
              "kind": "field",
              "name": "_initDisp"
            }
          ],
          "events": [
            {
              "name": "result-changed"
            }
          ],
          "attributes": [
            {
              "name": "disabled"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "xtal-fetch-get",
          "customElement": true
        },
        {
          "kind": "variable",
          "name": "bool1",
          "type": {
            "text": "object"
          },
          "default": "{\n    type: Boolean,\n    dry: true,\n}"
        },
        {
          "kind": "variable",
          "name": "obj1",
          "type": {
            "text": "object"
          },
          "default": "{\n    type: Object,\n    dry: true,\n    notify: true\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "XtalFetchGet",
          "declaration": {
            "name": "XtalFetchGet",
            "module": "xtal-fetch-get.js"
          }
        },
        {
          "kind": "js",
          "name": "bool1",
          "declaration": {
            "name": "bool1",
            "module": "xtal-fetch-get.js"
          }
        },
        {
          "kind": "js",
          "name": "obj1",
          "declaration": {
            "name": "obj1",
            "module": "xtal-fetch-get.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "xtal-fetch-get.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Bare-bones custom element that can make fetch calls.",
          "name": "XtalFetchGet",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'xtal-fetch-get'"
            },
            {
              "kind": "field",
              "name": "cache",
              "type": {
                "text": "{[key: string]: any}"
              },
              "static": true,
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\r\n    linkResult\r\n]"
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xc.Rx(this)"
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this"
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "prop",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_initDisp",
              "type": {
                "text": "string | null"
              }
            }
          ],
          "events": [
            {
              "name": "result-changed"
            }
          ],
          "attributes": [
            {
              "name": "disabled"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "xtal-fetch-get",
          "customElement": true
        },
        {
          "kind": "variable",
          "name": "bool1",
          "type": {
            "text": "PropDef"
          },
          "default": "{\r\n    type: Boolean,\r\n    dry: true,\r\n}"
        },
        {
          "kind": "variable",
          "name": "obj1",
          "type": {
            "text": "PropDef"
          },
          "default": "{\r\n    type: Object,\r\n    dry: true,\r\n    notify: true\r\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "XtalFetchGet",
          "declaration": {
            "name": "XtalFetchGet",
            "module": "xtal-fetch-get.ts"
          }
        },
        {
          "kind": "js",
          "name": "bool1",
          "declaration": {
            "name": "bool1",
            "module": "xtal-fetch-get.ts"
          }
        },
        {
          "kind": "js",
          "name": "obj1",
          "declaration": {
            "name": "obj1",
            "module": "xtal-fetch-get.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "xtal-fetch-req.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Feature rich custom element that can make fetch calls, including post requests.",
          "name": "XtalFetchReq",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'xtal-fetch-req'",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "controller"
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\n    triggerDebounce, updateDebounce\n]",
              "type": {
                "text": "array"
              },
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "_cachedResults",
              "type": {
                "text": "object"
              },
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "cachedResults"
            },
            {
              "kind": "method",
              "name": "debounce",
              "parameters": [
                {
                  "name": "func"
                },
                {
                  "name": "wait"
                },
                {
                  "name": "immediate"
                }
              ]
            },
            {
              "kind": "field",
              "name": "__loadNewUrlDebouncer"
            },
            {
              "kind": "method",
              "name": "debounceDurationHandler"
            },
            {
              "kind": "field",
              "name": "cache",
              "type": {
                "text": "{[key: string]: any}"
              },
              "static": true,
              "default": "{}",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xc.Rx(this)",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "prop",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "_initDisp",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ],
          "events": [
            {
              "name": "error-response-changed"
            },
            {
              "name": "error-text-changed"
            },
            {
              "name": "fetch-in-progress-changed"
            },
            {
              "name": "fetch-complete"
            },
            {
              "name": "result-changed",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ],
          "superclass": {
            "name": "XtalFetchGet",
            "module": "/xtal-fetch-get.js"
          },
          "tagName": "xtal-fetch-req",
          "customElement": true,
          "attributes": [
            {
              "name": "disabled",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "str2",
          "type": {
            "text": "object"
          },
          "default": "{\n    type: String,\n    dry: true,\n}"
        },
        {
          "kind": "variable",
          "name": "propDefMap",
          "type": {
            "text": "object"
          },
          "default": "{\n    reqInitRequired: bool1, insertResults: bool1,\n    cacheResults: str2,\n    debounceDuration: {\n        type: Number,\n        dry: true,\n    },\n    errorResponse: {\n        type: Object,\n        dry: true,\n        notify: true,\n        stopNotificationIfFalsy: true,\n    },\n    errorText: {\n        type: String,\n        dry: true,\n        notify: true,\n        stopNotificationIfFalsy: true,\n        reflect: true,\n    },\n    fetchInProgress: {\n        type: Boolean,\n        dry: true,\n        notify: true,\n        stopNotificationIfFalsy: true,\n        reflect: true,\n    }\n}"
        },
        {
          "kind": "variable",
          "name": "cacheSymbol"
        },
        {
          "kind": "function",
          "name": "triggerDebounce",
          "parameters": [
            {
              "name": "{ href, fetch, reqInit, reqInitRequired, as, self }"
            }
          ]
        },
        {
          "kind": "function",
          "name": "updateDebounce",
          "parameters": [
            {
              "name": "{ debounceDuration, self }"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "XtalFetchReq",
          "declaration": {
            "name": "XtalFetchReq",
            "module": "xtal-fetch-req.js"
          }
        },
        {
          "kind": "js",
          "name": "str2",
          "declaration": {
            "name": "str2",
            "module": "xtal-fetch-req.js"
          }
        },
        {
          "kind": "js",
          "name": "propDefMap",
          "declaration": {
            "name": "propDefMap",
            "module": "xtal-fetch-req.js"
          }
        },
        {
          "kind": "js",
          "name": "cacheSymbol",
          "declaration": {
            "name": "cacheSymbol",
            "module": "xtal-fetch-req.js"
          }
        },
        {
          "kind": "js",
          "name": "triggerDebounce",
          "declaration": {
            "name": "triggerDebounce",
            "module": "xtal-fetch-req.js"
          }
        },
        {
          "kind": "js",
          "name": "updateDebounce",
          "declaration": {
            "name": "updateDebounce",
            "module": "xtal-fetch-req.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "xtal-fetch-req.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Feature rich custom element that can make fetch calls, including post requests.",
          "name": "XtalFetchReq",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'xtal-fetch-req'",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "controller",
              "type": {
                "text": "AbortController | undefined"
              }
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\r\n    triggerDebounce, updateDebounce\r\n]",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "_cachedResults",
              "type": {
                "text": "{ [key: string]: any }"
              },
              "privacy": "private",
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "cachedResults"
            },
            {
              "kind": "method",
              "name": "debounce",
              "parameters": [
                {
                  "name": "func",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "wait",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "immediate",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "__loadNewUrlDebouncer",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "method",
              "name": "debounceDurationHandler"
            },
            {
              "kind": "field",
              "name": "cache",
              "type": {
                "text": "{[key: string]: any}"
              },
              "static": true,
              "default": "{}",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xc.Rx(this)",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "prop",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            },
            {
              "kind": "field",
              "name": "_initDisp",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ],
          "events": [
            {
              "name": "error-response-changed"
            },
            {
              "name": "error-text-changed"
            },
            {
              "name": "fetch-in-progress-changed"
            },
            {
              "name": "fetch-complete"
            },
            {
              "name": "result-changed",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ],
          "superclass": {
            "name": "XtalFetchGet",
            "module": "/xtal-fetch-get.js"
          },
          "tagName": "xtal-fetch-req",
          "customElement": true,
          "attributes": [
            {
              "name": "disabled",
              "inheritedFrom": {
                "name": "XtalFetchGet",
                "module": "xtal-fetch-get.ts"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "str2",
          "type": {
            "text": "PropDef"
          },
          "default": "{\r\n    type: String,\r\n    dry: true,\r\n}"
        },
        {
          "kind": "variable",
          "name": "propDefMap",
          "type": {
            "text": "PropDefMap<XtalFetchReqProps>"
          },
          "default": "{\r\n    reqInitRequired: bool1, insertResults: bool1,\r\n    cacheResults: str2,\r\n    debounceDuration: {\r\n        type: Number,\r\n        dry: true,\r\n    },\r\n    errorResponse: {\r\n        type: Object,\r\n        dry: true,\r\n        notify: true,\r\n        stopNotificationIfFalsy: true,\r\n    },\r\n    errorText: {\r\n        type: String,\r\n        dry: true,\r\n        notify: true,\r\n        stopNotificationIfFalsy: true,\r\n        reflect: true,\r\n    },\r\n    fetchInProgress: {\r\n        type: Boolean,\r\n        dry: true,\r\n        notify: true,\r\n        stopNotificationIfFalsy: true,\r\n        reflect: true,\r\n    }\r\n}"
        },
        {
          "kind": "variable",
          "name": "cacheSymbol"
        },
        {
          "kind": "function",
          "name": "triggerDebounce",
          "parameters": [
            {
              "name": "{href, fetch, reqInit, reqInitRequired, as, self}",
              "type": {
                "text": "XtalFetchReq"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "updateDebounce",
          "parameters": [
            {
              "name": "{debounceDuration, self}",
              "type": {
                "text": "XtalFetchReq"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "XtalFetchReq",
          "declaration": {
            "name": "XtalFetchReq",
            "module": "xtal-fetch-req.ts"
          }
        },
        {
          "kind": "js",
          "name": "str2",
          "declaration": {
            "name": "str2",
            "module": "xtal-fetch-req.ts"
          }
        },
        {
          "kind": "js",
          "name": "propDefMap",
          "declaration": {
            "name": "propDefMap",
            "module": "xtal-fetch-req.ts"
          }
        },
        {
          "kind": "js",
          "name": "cacheSymbol",
          "declaration": {
            "name": "cacheSymbol",
            "module": "xtal-fetch-req.ts"
          }
        },
        {
          "kind": "js",
          "name": "triggerDebounce",
          "declaration": {
            "name": "triggerDebounce",
            "module": "xtal-fetch-req.ts"
          }
        },
        {
          "kind": "js",
          "name": "updateDebounce",
          "declaration": {
            "name": "updateDebounce",
            "module": "xtal-fetch-req.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "xtal-fetch.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "xtal-fetch.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "test/test-all.js",
      "declarations": [],
      "exports": []
    }
  ]
}
